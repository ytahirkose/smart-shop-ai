server:
  port: 8761

spring:
  application:
    name: smartshopai-discovery
  profiles:
    active: docker
  security:
    user:
      name: admin
      password: admin123

# Eureka Server Configuration
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 1000
    response-cache-update-interval-ms: 3000
    renewal-percent-threshold: 0.85
    renewal-threshold-update-interval-ms: 15
    peer-eureka-status-refresh-time-interval-ms: 0
    wait-time-in-ms-when-sync-empty: 0
    peer-node-connect-timeout-ms: 200
    peer-node-connection-idle-timeout-seconds: 30
    peer-node-read-timeout-ms: 200
    peer-node-total-conns: 1000
    peer-node-total-conns-per-host: 500
    retention-time-in-ms-in-delta-queue: 3
    delta-retention-time-interval-in-ms: 6
    max-elements-in-peer-replication-pool: 1000
    max-elements-in-status-replication-pool: 1000
    max-threads-for-peer-replication: 20
    max-threads-for-status-replication: 1
    max-time-for-replication: 30000
    min-threads-for-peer-replication: 5
    min-threads-for-status-replication: 1
    number-of-replication-retries: 5
    peer-eureka-nodes-update-interval-ms: 600000

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    com.netflix.eureka: DEBUG
    com.smartshopai.discovery: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
